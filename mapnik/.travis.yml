language: cpp

compiler:
 - clang
 - gcc

env:
  matrix:
   - XMLPARSER="libxml2" DEBUG=False
   - XMLPARSER="libxml2" DEBUG=True
   - XMLPARSER="ptree" DEBUG=True

# travis + ubuntugis with gdal and postggis leads to many potential dead-end conflicts
# the below is thanks to https://github.com/CartoDB/Windshaft/blob/d82fe08b32fc7907bbe907ab290f8a082215ae26/.travis.yml#L1
before_install:
  - export PGUSER=postgres
  - sudo mv /etc/apt/sources.list.d/pgdg-source.list* /tmp
  - sudo apt-get -qq purge postgis* postgresql*
  - sudo apt-add-repository -y ppa:cartodb/postgresql-9.3
  - sudo apt-add-repository -y ppa:cartodb/gis
  - sudo rm -Rf /var/lib/postgresql /etc/postgresql
  - sudo apt-get update -qq
  - sudo apt-get install -q libharfbuzz-dev postgresql-9.3-postgis-2.1 postgresql-contrib-9.3 gdal-bin libgdal-dev
  - echo -e "local\tall\tall\ttrust\nhost\tall\tall\t127.0.0.1/32\ttrust\nhost\tall\tall\t::1/128\ttrust" |sudo tee /etc/postgresql/9.3/main/pg_hba.conf
  - sudo service postgresql restart

install:
 - sudo apt-get install -y libboost-python1.48-dev libboost-thread1.48-dev libboost-filesystem1.48-dev libboost-regex1.48-dev libboost-program-options1.48-dev
 - sudo apt-get install -y make valgrind python-nose libicu-dev libproj-dev libcairo-dev python-cairo-dev libcairo-dev python-cairo-dev libpng-dev libjpeg-dev libtiff-dev libwebp-dev libz-dev libfreetype6-dev libxml2-dev libsqlite3-dev
 # multi-face ttc font: https://github.com/mapnik/mapnik/issues/2274
 - sudo apt-get install ttf-wqy-microhei

before_script:
 - psql -U postgres -c 'create database template_postgis'
 - psql -U postgres -c 'create extension postgis' -d template_postgis
 - if [[ "${CXX}" == 'g++' ]]; then export JOBS=2; fi;
 - if [[ "${CXX}" == 'clang++' ]]; then export JOBS=4; fi;
 - if [[ "${DEBUG}" == True ]]; then export JOBS=$((JOBS/2)); fi;

script:
 - ./configure CXX=${CXX} CC=${CC} XML_PARSER=$XML_PARSER DEBUG=${DEBUG} DEMO=True BENCHMARK=False BINDINGS='python' CPP_TESTS=True CAIRO=True FAST=True
 - make
 - make test-local
 - source localize.sh && make grind
